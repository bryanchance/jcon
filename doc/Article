[ submitted July 7, 1997, for the Icon Newsletter ]


Todd Proebsting, Gregg Townsend, and Denise Todd have begun
development of an entirely new implementation of Icon. The new
system targets the Java Virtual Machine and so provides platform
independence for translated Icon programs. The new system
includes an Icon translator written in Icon and a run-time system
written in Java.

The Java Virtual Machine (JVM) is a platform-independent
execution environment for programs distributed as Java class
files. Class files include executable code (a compact stack-
machine byte code) and linking information, much like ordinary
object files. JVM implementations execute class file code either
through interpretation or by compilation to directly executable
machine code. JVM implementations also provide services like
garbage collection and thread support in addition to a large set
of library procedures.

Although the JVM was designed for Java, it can also support other
languages. The new translator reads Icon source files and writes
Java class files. Combining these with the run-time system
produces a Zip file composed entirely of class files and
executable on any platform supporting Java. (JVM implementations
are freely available for every major computer system.)

This system is as complete an implementation as is possible given
the limitations of the Java Virtual Machine. The system does not
support kbhit(), for instance, because there is no such
functionality in the JVM. Otherwise, the system implements the
full Icon language. It does not, however, support graphics or
large integers.

Development began in the Fall of 1996, with Denise Todd's
implementation of the lexical analyzer and parser for Icon.
(Denise recently graduated from the University of Arizona with an
MS in Computer Science.) This past Spring Todd Proebsting
implemented the rest of the translator. Todd Proebsting and Gregg
Townsend concurrently developed the run-time system. The
translator uses a new mechanism for evaluating generators and
goal-directed evaluation [Proebsting 1997]. The run-time system
is also a new design: it is completely object-oriented, with each
of Icon's primitive types implemented as its own class, which
greatly simplified the design.

A proof-of-concept implementation is now fully functional,
validating the basic idea and the overall framework. Much work
remains to bring the performance to a practical level; the
initial implementation emphasized expediency over efficiency.
Public availability will be announced at a later date.

---- Todd Proebsting, "Simple Translation of Goal-Directed
Evaluation", Proceedings of the ACM SIGPLAN 1997 Conference on
Programming Language Design and Implementation (PLDI).











