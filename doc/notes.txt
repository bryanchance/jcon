what's implemented:
-- all datatypes (but only 64-bit integers; no large integers)
-- all keywords, although resource keywords produce zeroes
-- preprocessing
-- most functions; missing chdir(), loadfunc(), getch()/getche()/kbhit()
-- only part of the graphics repertoire (see below)

general caveats:
-- some Java datatypes are suboptimal e.g. for push(L)/pop(L)
-- crude tracing can be enabled by setting &trace
-- the TRACE environment variable is *not* honored

building and running programs:
-- jcont is a complex script that only runs on Unix
-- "jcont foo.zip" doesn't search IPATH (only link'd files are searched for)
-- link directives must give a simple name (not a path)
-- compiled .zip files cannot be renamed: name must match original .icn name
   (however, executables can be renamed)
-- $PATH must include env and uname commands to use getenv() and &hostname

------------------------------------------------------------------------------

known bugs:
-- the preprocessor does not diagnose "$define f(a) ..."
-- local variables are not dereferenced prior to being returned
-- e[e+:e] and e[e-:e] function identically to v9, which is wrong in some cases
-- more procedures may be "invocable" than in v9

------------------------------------------------------------------------------

strings and csets:
-- Jcon uses 8-bit characters, not Unicode

numerics:
-- arithmetic overflow and underflow are not detected
-- conversion of reals to strings does not match results from v9
-- conversion of strings to reals and integers follows slightly different rules

structures:
-- random selection from sets and tables differs from v9

files:
-- no pipes
-- random I/O (seek(), where()) fails for &input/&output/&errout
-- a tty input request does not automatically flush tty output first

error reporting:
-- arg lists in traceback show actual instead of expected number of arguments
   (e.g.: a call to insert() traces as insert() not insert(&null,&null,&null))
-- in traceback images, list contents and record fields are omitted

miscellaneous:
-- no OS symbols (e.g. _UNIX) are predefined; _JAVA is predefined
-- commands run by system(s) do not inherit stdin/stdout/error 
-- display() ignores its arguments (and displays everything)
-- display() prints globals in an unsorted order
-- function() generates names in an unsorted order
-- &time produces elapsed wall-clock time, not CPU time, due to Java limitations
-- &allocated, &collections, &storage, and &regions produce only zero values

------------------------------------------------------------------------------

arguably correct differences:
-- seek(-n) fails if n > filesize
-- to-by handles overflow in "n to MAXINT" case
-- 1 / 0 gives error 201 instead of error 204
-- set() ++ 0 reports the 0 as the offending value
-- traceback is deliberately limited to the innermost 100 nested calls
-- "R . field" errors (e.g. 107, 207) give actual field name attempted
-- collect(1,1000000000) fails....

extensions:
-- on all platforms, read() accepts CR, LF, or CRLF as line terminator
-- proc(i) produces a procedure that returns its ith argument
-- a[i:j,k:m] is accepted as shorthand for a[i:j][k:m]

------------------------------------------------------------------------------

graphics overview:
-- only some of the graphics features are present
-- see rts/wBuiltins.java for the list of implemented functions
-- see rts/wAttrib.java for the list of implemented attributes

graphics bugs:
-- window repair is only done when paused for event input
-- &interval is always zero
-- graphics output is flushed before any read() -- even untranslated from disk

graphics (general):
-- no sharing of graphics contexts among windows by Couple() or Clone()

events:
-- Java distinguishes "alt" and "meta" keys; Jcon maps both to the &meta flag
-- &meta is never set with mouse events (Java uses it to encode "which button")
-- X returns "\r" for the Enter key but Java (and therefore Jcon) returns "\n"
-- "outboard" keys differ from X, but are similar to Windows; see keysyms.icn
-- resize events are not reported yet

colors:
-- variants (dark, weak, etc.) of unsaturated colors (brown, pink, violet)
   are different from v9 and arguably better  
-- "light black" and "pale black" are black, not shades of gray
-- on 8-bit displays, colors may be approximated (depending on Java system)
-- there is no inherent limit to the number of colors in use (v9 stops at 256)
-- mutable colors are not available
-- gamma correction is not yet implemented; acts as if gamma=1.0

fonts:
-- Java family names are case sensitive
-- Icon generic family names, and all characteristics, are case-insensitive
-- generic names {serif, sans, typewriter} work well; bold/italic variants work
-- generic "mono" appearance varies by platform; bold/italic don't always work
-- Font(s) always succeeds for non-empty s (Java never rejects any name)
-- the special X font name "fixed" is modeled imperfectly by "mono,10"

text:
-- read(), write(), etc. work with windows
-- \r and \t are not handled correctly on output
-- some Java font metrics are bogus, leading to various problems
-- the visible text cursor, when enabled, is a solid, nonblinking underbar

miscellaneous:
-- WDefault() always fails

------------------------------------------------------------------------------

Irix implementation note:
-- The SGI Java implementation may issue "JIT translation fails" messages
   at execution time for some large procedures. This message is annoying
   but harmless.  We have left JIT translation enabled because it normally
   succeeds and produces much faster execution.
