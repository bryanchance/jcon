additions in v2:
-- large integers are implemented
-- loadfunc() is implemented
-- several more graphics attributes and functions are implemented
-- section wraparound (e.g. "abcd"[-2+:3]) yields failure  (this is a bugfix)

losses in v2:
-- variable(), display(), and &dump can access only global variables
-- compilation with "-fn" is needed for tracing or for detailed error traceback

changes in v2:
-- in graphics events, the Enter key produces '\r' (for v9 compatibility)

------------------------------------------------------------------------------

what's implemented:
-- all datatypes including large integers
-- all keywords, although resource keywords produce zeroes
-- preprocessing
-- only part of the graphics repertoire (see below)
-- most functions; missing chdir(), getch()/getche()/kbhit()
-- loadfunc(zipfile,funcname) loads Java or Icon code, and supports generators
-- based on Icon as defined by LB3/GB; undocumented behavior may differ

compilation and linking:
-- jcont is a complex script that only runs on Unix
-- "jcont foo.zip" doesn't search IPATH (only link'd files are searched for)
-- link directives must give a simple name (not a path)
-- compiled .zip files cannot be renamed: name must match original .icn name
   (however, executables can be renamed)
-- more procedures may be "invocable" by default than in v9

execution:
-- if Java runs out of memory, setenv JXOPTS='-mx50m' (e.g.) to increase max
-- out-of-memory errors say "block region"; there is no separate string region
-- $PATH must include env and uname commands to use getenv() and &hostname
-- executables are portable among dissimilar Unix platforms (just need ksh+Java)
-- very large .icn files (e.g. 9000 lines) may produce bogus ClassFormatErrors
   -- #%#% is this still a problem with JDK1.1?

------------------------------------------------------------------------------

strings and csets:
-- Jcon uses 8-bit characters (as does v9), not Unicode
-- conversion to or from numeric may differ slightly from v9
-- in particular, conversion from real to string shows more digits

structures:
-- random selection from sets and tables differs from v9
-- a[i:j,k:m] is accepted as shorthand for a[i:j][k:m]

files:
-- &errout is always unbuffered
-- random I/O (seek(), where()) fails for &input/&output/&errout
-- processes run by system(s) or open(s,"p") do not inherit stdin/stdout/error 
   -- stdin is empty, except where provided by the program for open(s,"wp")
   -- stdout and stderr are copied from the process when it terminates

debugging:
-- function() generates names in an unsorted order
-- arg lists in traceback show actual instead of expected number of arguments
   (e.g.: a call to insert() traces as insert() not insert(&null,&null,&null))
-- record fields are not shown in traceback images
-- variable(), display(), and &dump can access only global variables

keywords:
-- &features includes "Java"; _JAVA is predefined in the preprocessor
-- &time produces elapsed wall-clock time, not CPU time, due to Java limitations
-- &clock and &dateline may be off by an hour due to Java library bugs
-- &allocated, &collections, &storage, and &regions produce only zero values

------------------------------------------------------------------------------

graphics overview:
-- only some of the graphics features are present
-- omissions include dx/dy translation, images, wide lines
-- see rts/wBuiltins.java for the list of implemented functions
-- see rts/wAttrib.java for the list of implemented attributes

graphics bugs:
-- window repair is only done when paused for event input
-- &interval is always zero
-- "drawop=reverse" produces the wrong color under Java 1.1; okay under 1.2

graphics (general):
-- there is no sharing of graphics contexts among windows by Couple() or Clone()
-- linewidth is always 1
-- textures are not implemented

events:
-- Java distinguishes "alt" and "meta" keys; Jcon maps both to the &meta flag
-- &meta is never set with mouse events (Java uses it to encode "which button")
-- "outboard" keys differ from X, are similar to Windows; see bin/keysyms.icn
-- no timing information is provided (&interval is always zero)
-- resize events are not reported yet

colors:
-- there is no inherent limit to the number of colors in use
-- the default gamma value is 2.0
-- on 8-bit displays, depending on the Java system, colors may be approximated
-- variants (dark, weak, ..) of unsaturated colors (brown, pink, violet) differ
-- "light black" and "pale black" produce black, not shades of gray
-- mutable colors are not available

fonts:
-- Java family names are case sensitive
-- Icon generic family names, and all characteristics, are case-insensitive
-- generic names {serif, sans, typewriter} work well; bold/italic variants work
-- generic "mono" appearance varies by platform; bold/italic don't always work
-- Font(s) always succeeds for non-empty s (Java never rejects any name)
-- the default font name "fixed" is mapped to "mono,bold,12"

text:
-- read(), write(), etc. work with windows
-- \r and \t are not handled correctly on output
-- some Java font metrics are bogus, leading to various problems
-- the visible text cursor, when enabled, is a solid, nonblinking underbar

miscellaneous:
-- WDefault() always fails
