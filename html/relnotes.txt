<P> Version 1.0 of Jcon implemented the classic core of the
Icon programming language and some basic graphics facilities.
Version 2.0 completes the graphics facilities
and adds large integers and dynamic loading.

<P> Version 2.0 also incorporates radical changes in the implementation
that provide a typical performance improvement of 40%.

<H3>Notable changes from Version 1</H3>
<UL>
    <LI>Compilation with <CODE>-f d</CODE> is now needed for tracing,
	detailed traceback, or error conversion (<CODE>&amp;error</CODE>)
    <LI><CODE>variable()</CODE>, <CODE>display()</CODE>,
	and <CODE>&amp;dump</CODE> can access only global variables
    <LI>Command options for <CODE>jcont</CODE> are closer to those
	of <CODE>icont</CODE>
</UL>

<H3>Tested Platforms</H3>

<P> Jcon has been successfully tested on:
<BLOCKQUOTE>
	SGI Indigo2 / Irix 6.2 / SGI Java 3.1.1 (JDK 1.1.6N)
	<BR> Sun Sparc / Solaris 2.6 (SunOS 5.6) / Sun Java 1.1.6N
	<BR> IBM RS6000 / AIX 4.1.5 / IBM Java 1.1.4-19980430
	<BR> DEC Alpha / Digital Unix 4.0B / Digital Java 1.1.6-2
	<BR> Intel / Linux v2 (Red Hat 5.0) / Blackdown Java 1.1.5v7
</BLOCKQUOTE>

<P> We also tested Jcon using the JDK 1.2beta4 release for Solaris 2.6.
Nongraphical programs worked well, but many problems were seen in
graphics applications.

<P> We would be interested to learn of either successes or failures
on other platforms.

<H3>Known problems (nongraphical)</H3>
<UL>
    <LI><CODE>&amp;clock</CODE> and <CODE>&amp;dateline</CODE>
	may be off by one hour due to Java library bugs
    <LI>Extremely large procedures (thousands of lines long)
	can generate code that is too large for Java to handle
</UL>

<H3>Known graphics problems</H3>

<UL>
    <LI>When an obscured part of a window is exposed,
	it may not be repaired (redrawn) until the program
	pauses to await an event
    <LI>Some Java implementations create a window that is one pixel wider
	than requested
    <LI>DEC Java 1.1.6 sometimes writes different fonts to the window
	and its backup image, leading to bizarre effects from
	<CODE>CopyArea()</CODE> and window repair
    <LI>The <CODE>mono</CODE> font is unpredictable for Solaris Java
	displaying on a non-Solaris X server
    <LI><CODE>WOpen("image=file.gif")</CODE> does not load an image
   	if presented with a multi-part (animated) GIF image
    <LI><CODE>drawop=reverse</CODE> draws the wrong color under rare
	conditions that are not understood
</UL>
