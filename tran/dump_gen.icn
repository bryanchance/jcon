global dump_emit_table

procedure dump_emit(label, code)
	dump_emit_table[label] := code
end

procedure dump_invocables(all, L)
	writes("invocable")
	writes(\all & " all")
	every writes(" ", image(!L))
	write()
end

procedure dump_links(L)
	writes("link ")
	every writes(" ", !L)
	write()
end

procedure dump_records(name, fields, coord)
	writes("record ", name, "(")
	every writes(" ", !fields)
	write(")")
end

procedure dump_globals(L)
	writes("global ")
	every writes(" ", !L)
	write()
end

procedure dump_function(name, params, accumulate, locals, statics, code, coord)
	local lab, c

	writes("procedure ", name, "(")
	every writes(" ", !params)
	writes(\accumulate & "[]")
	writes(" )")
	write()
	writes("local")
	every writes(" ", !locals)
	write()
	writes("static")
	every writes(" ", !statics)
	write()
	dump_emit_table := table()
	ir(code)
	dump_emit_table := optimize(dump_emit_table, code.ir.start)
	every lab := key(dump_emit_table) & c := dump_emit_table[lab] do {
		write(ir_dump(lab))
		every write("\t", ir_dump(!c))
	}
	write("end ", name)
end

procedure dump_File(getline, flagList)
	if match("-O", !flagList) then {
		optimize_flag := 1
	}
	parse(getline)
end

procedure dump_CG()
	return code_gen(dump_emit,
			dump_globals,
			dump_invocables,
			dump_links,
			dump_function,
			dump_records,
			dump_File
			)
end
