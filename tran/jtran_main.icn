invocable all

global outfile, optimize_flag, nolink_flag, java_classname, noerror2failure
global nodebuginfo

procedure main(L) 
	local filename, cg_flags, cg, getline, predefs, preonly

	predefs := table()
	predefs["_JAVA"] := "1"
	predefs["_ASCII"] := "1"
	predefs["_CO_EXPRESSIONS"] := "1"
	predefs["_SYSTEM_FUNCTION"] := "1"
	# there is no predefn for "environment variables" feature

	cg_flags := []
	while L[1] do {	# process flags
		pop(L) ? {
			if ="-E" then {
				preonly := 1	# preprocess only
			} else if ="-target:" then {
				/CG | stop("ERROR: multiple -target specifications")
				cg := tab(0)
				CG := (\proc(cg || "_CG"))()
				\CG | stop("ERROR: unknown target: ", cg)
			} else if ="-class:" then {
				/java_classname | stop("ERROR: multiple -class specifications")
				java_classname := tab(0)
			} else if ="-f" then {
				if find("e") | find("a") then {
					noerror2failure := 1
				}
				if find("n") | find("a") then {
					nodebuginfo := 1
				}
			} else if ="-" then {
				put(cg_flags, &subject)
			} else {
				/filename | stop("ERROR: only one file name")
				filename := &subject
			}
		}
	}

	if \filename then {
		getline := create preprocessor(filename, predefs)
	} else {
		getline := create !&input
	}

	if \preonly then {
		while write(@getline)
	} else {
		\CG | stop("ERROR: must specify -target")
		\java_classname | stop("ERROR: must specify -class")
		CG.File(getline, cg_flags)
	}

	#every writes(&errout, " ", "  total alloc: " | &allocated | "\n")
	#every writes(&errout, " ", "  current:     " | &storage | "\n")
	#every writes(&errout, " ", "  collections: " | &collections | "\n")
end
